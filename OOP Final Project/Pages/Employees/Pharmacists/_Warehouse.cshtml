@model OOP_Final_Project.ViewModels.DoctorViewModel

<div class="px-5">
    <!-- Header Section -->
    <div class=" " style="padding-top: 64px;">
        <div class="  d-flex justify-content-between align-items-center mb-4">
            <h3 class="mb-0">Warehouse</h3>

            <div>
                <!-- Action Buttons Group -->
                <div class="">
                    <div class="d-flex justify-content-center gap-md-1">

                        <button class="btn btn-outline-dark" data-bs-toggle="modal"
                            data-bs-target="#addNewMedicineModal">
                            <i class="fas fa-plus-circle me-2"></i> Add New
                        </button>
                        <button class="btn btn-success" onclick="document.getElementById('importFileInput').click()">
                            <i class="fas fa-file-import me-2"></i> Import Excel
                        </button>
                        <input type="file" id="importFileInput" accept=".xlsx, .csv" style="display:none"
                            onchange="handleFileImport(event)">

                        <!-- Single Export Button -->
                        <button class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#exportModal">
                            <i class="fas fa-file-export me-2"></i> Export
                        </button>

                    </div>
                </div>
            </div>

        </div>
    </div>

    <hr>


    <!-- Statistics Section -->
    <div class="my-4 d-flex flex-wrap gap-md-1">
        <!-- Total Appointments -->
        <div class="col-md-2 d-flex flex-column " style="flex: 1 0 auto; width: 16.66666667%;">
            <div class="card quick-access-card text-center shadow-sm"
                style="background-color: white; border-radius: 16px;">
                <div class="card-body p-3 pb-2 d-flex flex-column g-2">
                    <div class="d-flex flex-column align-items-start gap-md-2" style="align-items: center;">
                        <div class="text-muted">Total Medicines</div>
                        <div class="d-flex gap-md-3 align-items-center w-100" style="justify-content: space-between;">
                            <h3 class="mb-0 pb-0 ">@Model.TotalMedicineCount</h3>
                            <small class="text-muted">
                                <i class="fas fa-cubes"></i> Stock 20.000
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Future Appointments -->
        <div class="col-md-3 d-flex flex-column">
            <div class="card quick-access-card text-center shadow-sm"
                style="background-color: white; border-radius: 16px;">
                <div class="card-body p-3 pb-2 d-flex flex-column g-2">
                    <div class="d-flex flex-column align-items-start gap-md-2" style="align-items: center;">
                        <div class="text-muted">Expiring Soon</div>
                        <div class="d-flex w-100 align-items-center" style="justify-content: space-between;">
                            <h3 class="mb-0">@Model.TotalExpiredSoonMedicineCount</h3>
                            <small class="text-muted">in the next 30 days</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <!-- Completed Appointments -->
        <div class="col-md-3 d-flex flex-column">
            <div class="card quick-access-card text-center shadow-sm"
                style="background-color: white; border-radius: 16px;">
                <div class="card-body p-3 pb-2 d-flex flex-column g-2">
                    <div class="d-flex flex-column align-items-start gap-md-2" style="align-items: center;">
                        <div class="text-muted">Low Stock</div>
                        <div class="d-flex align-items-center w-100" style="justify-content: space-between;">
                            <h3 class="mb-0 text-warning">@Model.TotalLowStockMedicineCount</h3>
                            <small class="text-muted">
                                <i class="fab fa-stack-overflow"></i> Need To restock
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Cancelled Appointments -->
        <div class="col-md-3 d-flex flex-column">
            <div class="card quick-access-card text-center shadow-sm"
                style="background-color: white; border-radius: 16px;">
                <div class="card-body p-3 pb-2 d-flex flex-column ">
                    <div class="d-flex flex-column align-items-start gap-md-2" style="align-items: center;">
                        <div class="text-muted">Expired</div>
                        <div class="d-flex  align-items-center w-100" style="justify-content: space-between;">
                            <h3 class="mb-0 text-danger">@Model.TotalExpiredMedicineCount</h3>
                            <small class="text-muted">
                                <i class="fas fa-trash-alt"></i> Need to remove @Model.Medicines.Count
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Upcoming Appointments Section -->
    <div class="card rounded-16px mb-4 shadow-sm p-4" style="background-color: #ffffff;">
        <!-- Filters and Buttons -->
        <div class="d-flex flex-column">

            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="d-flex gap-md-2">
                    <!-- View Options -->
                    <div class="btn-group" role="group" aria-label="Basic example">
                        <button type="button" class="btn btn-dark" id="viewAllBtn">View All</button>
                        <button type="button" class="btn btn-outline-dark" id="lowStockBtn">Low stock</button>
                        <button type="button" class="btn btn-outline-dark" id="expiredBtn">Expired</button>
                    </div>

                    <!-- Sort Options -->
                    <div>
                        <select id="sortTime" class="form-select w-auto " onchange="sortAppointments()">
                            <option value="" class="text-dark">Filter None</option>
                            <option value="Tablet" class="text-dark">Tablet</option>
                            <option value="Syrup" class="text-dark">Syrup</option>
                            <option value="Injection" class="text-dark">Injection</option>
                        </select>
                    </div>

                    <!-- Date Filter -->
                    <div>
                        <button class="btn border-secondary w-100" id="sortExpiryBtn">
                            <i class="fas fa-sort me-2"></i> Sort by Expiry Date
                        </button>
                    </div>

                </div>

                <!-- Search Input -->
                <div class="input-group w-25">
                    <span class="input-group-text text-muted">
                        <i class="fas fa-search"></i>
                    </span>

                    <input type="text" class="form-control" placeholder="Search">
                </div>
            </div>
        </div>

        <!-- Appointments Table -->
        <table class="table table-hover table-bordered shadow-sm text-center " id="warehouseTable">
            <thead class="table-light">
                <tr>
                    <th style="font-weight: 600;">Medicine Name </th>
                    <th style="font-weight: 600;">Type</th>
                    <th style="font-weight: 600;">Import date</th>
                    <th style="font-weight: 600;">Expired date</th>
                    <th style="font-weight: 600;">Quantity</th>
                    <th style="font-weight: 600;">Action</th>
                </tr>
            </thead>
            <tbody id="warehouseTableBody">
                @await Html.PartialAsync("Pharmacists/_WarehouseTableRows", Model)
            </tbody>
        </table>
    </div>

</div>


<div>
    @await Html.PartialAsync("Modals/_addNewMedicineModal")
</div>



<!-- Modal for Export -->
<div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportModalLabel">Export Options</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Please choose the format to export the medicines:</p>
                <div class="d-flex justify-content-end gap-md-2">
                    <button class="btn btn-outline-danger" onclick="exportMedicines('pdf')">
                        <i class="fas fa-file-pdf me-2"></i> Export PDF
                    </button>
                    <button class="btn btn-outline-success" onclick="exportMedicines('excel')">
                        <i class="fas fa-file-excel me-2"></i> Export Excel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

<script>
    function exportMedicines(format) {
        fetch(`/export-medicine?format=${format}`)
            .then(response => {
                if (response.ok) {
                    return response.blob();
                } else {
                    alert("Export failed.");
                    throw new Error("Failed to export");
                }
            })
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const link = document.createElement("a");
                link.href = url;
                link.download = `medicines.${format}`;
                link.click();
            })
            .catch(err => console.error("Export error:", err));
    }

    // Attach event listeners to the buttons
    document.getElementById("viewAllBtn").addEventListener("click", function () {
        filterMedicines("all");
        toggleButtonClass(this);
    });
    document.getElementById("lowStockBtn").addEventListener("click", function () {
        filterMedicines("low-stock");
        toggleButtonClass(this);
    });
    document.getElementById("expiredBtn").addEventListener("click", function () {
        filterMedicines("expired");
        toggleButtonClass(this);
    });

    // Function to filter medicines based on the selected filter
    function filterMedicines(filter) {
        fetch(`/Employees/TestPharma?handler=LoadPartial&section=WarehouseTableRows&filter=${filter}`)
            .then(response => response.text())
            .then(html => {
                document.getElementById("warehouseTableBody").innerHTML = html;
            })
            .catch(err => console.error("Error fetching filtered medicines:", err));
    }

    // Function to toggle button classes
    function toggleButtonClass(activeButton) {
        const buttons = document.querySelectorAll(".btn-group .btn");
        buttons.forEach(button => {
            if (button === activeButton) {
                button.classList.remove("btn-outline-dark");
                button.classList.add("btn-dark");
            } else {
                button.classList.remove("btn-dark");
                button.classList.add("btn-outline-dark");
            }
        });
    }


</script>